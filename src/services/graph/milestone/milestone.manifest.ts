/**
 * Milestone Node Manifest
 * 
 * This file defines what data the milestone node type can publish and subscribe to.
 */

import { NodeType } from '@/services/graph/neo4j/api-urls';
import { DataField } from '@/services/graph/observer/node-manifest';
import { CommonFields, createArrayItemField } from '@/services/graph/base-node/base-manifest';

// Milestone specific fields
export const MilestoneFields: Record<string, DataField> = {
  STATUS: {
    id: 'status',
    name: 'Status',
    description: 'The current status of the milestone',
    path: 'status',
    critical: true
  },
  KPIS: {
    id: 'kpis',
    name: 'KPIs',
    description: 'Key performance indicators for this milestone',
    path: 'kpis',
    critical: true
  },
  TOTAL_COST: {
    id: 'totalCost',
    name: 'Total Cost',
    description: 'The total cost for this milestone',
    path: 'totalCost',
    critical: true
  },
  MONTHLY_VALUE: {
    id: 'monthlyValue',
    name: 'Monthly Value',
    description: 'The monthly value generated by this milestone',
    path: 'monthlyValue'
  },
  TEAM_COSTS: {
    id: 'teamCosts',
    name: 'Team Costs',
    description: 'The costs associated with teams for this milestone',
    path: 'teamCosts'
  },
  PROVIDER_COSTS: {
    id: 'providerCosts',
    name: 'Provider Costs',
    description: 'The costs associated with providers for this milestone',
    path: 'providerCosts'
  },
  FEATURE_ALLOCATIONS: {
    id: 'featureAllocations',
    name: 'Feature Allocations',
    description: 'The feature allocations for this milestone',
    path: 'featureAllocations'
  },
  OPTION_DETAILS: {
    id: 'optionDetails',
    name: 'Option Details',
    description: 'The option revenue details for this milestone',
    path: 'optionDetails'
  },
  PROVIDER_DETAILS: {
    id: 'providerDetails',
    name: 'Provider Details',
    description: 'The provider cost details for this milestone',
    path: 'providerDetails'
  },
  // Nested fields for KPIs
  KPI_ID: createArrayItemField('kpis', 'id', 'KPI ID', 'The unique identifier for a KPI'),
  KPI_NAME: createArrayItemField('kpis', 'name', 'KPI Name', 'The name of a KPI', true),
  KPI_TARGET: createArrayItemField('kpis', 'target', 'KPI Target', 'The target value for a KPI', true),
  KPI_UNIT: createArrayItemField('kpis', 'unit', 'KPI Unit', 'The unit of measurement for a KPI'),
  // Nested fields for feature allocations
  FEATURE_ALLOCATION_ID: createArrayItemField('featureAllocations', 'featureId', 'Feature ID', 'The ID of an allocated feature'),
  FEATURE_ALLOCATION_NAME: createArrayItemField('featureAllocations', 'name', 'Feature Name', 'The name of an allocated feature'),
  FEATURE_ALLOCATION_HOURS: createArrayItemField('featureAllocations', 'totalHours', 'Total Hours', 'The total hours allocated to a feature', true),
  FEATURE_ALLOCATION_COST: createArrayItemField('featureAllocations', 'totalCost', 'Total Cost', 'The total cost allocated to a feature', true),
  // Nested fields for option details
  OPTION_DETAIL_ID: createArrayItemField('optionDetails', 'optionId', 'Option ID', 'The ID of an option'),
  OPTION_DETAIL_NAME: createArrayItemField('optionDetails', 'name', 'Option Name', 'The name of an option'),
  OPTION_DETAIL_REVENUE: createArrayItemField('optionDetails', 'monthlyRevenue', 'Monthly Revenue', 'The monthly revenue from an option', true),
  // Nested fields for provider details
  PROVIDER_DETAIL_ID: createArrayItemField('providerDetails', 'id', 'Provider ID', 'The ID of a provider'),
  PROVIDER_DETAIL_NAME: createArrayItemField('providerDetails', 'name', 'Provider Name', 'The name of a provider'),
  PROVIDER_DETAIL_AMOUNT: createArrayItemField('providerDetails', 'amount', 'Amount', 'The cost amount for a provider', true),
  PROVIDER_DETAIL_TYPE: createArrayItemField('providerDetails', 'type', 'Cost Type', 'The type of cost for a provider')
};

// Define what the milestone node publishes
export const MilestonePublishes = {
  fields: [
    CommonFields.TITLE,
    CommonFields.DESCRIPTION,
    CommonFields.POSITION,
    CommonFields.CREATED_AT,
    CommonFields.UPDATED_AT,
    MilestoneFields.STATUS,
    MilestoneFields.KPIS,
    MilestoneFields.TOTAL_COST,
    MilestoneFields.MONTHLY_VALUE,
    MilestoneFields.TEAM_COSTS,
    MilestoneFields.PROVIDER_COSTS,
    MilestoneFields.FEATURE_ALLOCATIONS,
    MilestoneFields.OPTION_DETAILS,
    MilestoneFields.PROVIDER_DETAILS,
    MilestoneFields.KPI_ID,
    MilestoneFields.KPI_NAME,
    MilestoneFields.KPI_TARGET,
    MilestoneFields.KPI_UNIT,
    MilestoneFields.FEATURE_ALLOCATION_ID,
    MilestoneFields.FEATURE_ALLOCATION_NAME,
    MilestoneFields.FEATURE_ALLOCATION_HOURS,
    MilestoneFields.FEATURE_ALLOCATION_COST,
    MilestoneFields.OPTION_DETAIL_ID,
    MilestoneFields.OPTION_DETAIL_NAME,
    MilestoneFields.OPTION_DETAIL_REVENUE,
    MilestoneFields.PROVIDER_DETAIL_ID,
    MilestoneFields.PROVIDER_DETAIL_NAME,
    MilestoneFields.PROVIDER_DETAIL_AMOUNT,
    MilestoneFields.PROVIDER_DETAIL_TYPE
  ]
};

// Define what the milestone node subscribes to
export const MilestoneSubscribes = {
  nodeTypes: ['feature', 'option', 'provider', 'team'] as NodeType[],
  fields: {
    feature: ['title', 'duration', 'buildType', 'teamAllocations'],
    option: ['title', 'optionType', 'transactionFeeRate', 'monthlyVolume', 'duration'],
    provider: ['title', 'costs', 'duration'],
    team: ['title', 'bandwidth', 'roster']
  }
};

// Export the complete manifest
export const MilestoneManifest = {
  publishes: MilestonePublishes,
  subscribes: MilestoneSubscribes
}; 